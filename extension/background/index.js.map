{"version":3,"file":"index.js","sources":["../../utils/dist/messaging/addListener.js","../../background/src/chrome.runtime/onMessage/index.ts","../../background/src/chrome.runtime/onMessage/handlers.ts","../../background/src/chrome.runtime/onMessage/login.ts","../../background/src/chrome.runtime/onMessage/logout.ts","../../utils/dist/messaging/RuntimeMessage.js"],"sourcesContent":["import { isRecipient, } from './RuntimeMessage';\nexport const addListener = (to, requestHandlers, responseHandlers) => chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // console.warn(to, message, sender);\n    if (!isRecipient(message, to))\n        return false;\n    const { type } = message;\n    const response = message;\n    if (response.isReply) {\n        const handleResponse = responseHandlers[type];\n        if (handleResponse) {\n            handleResponse(response, sender);\n        }\n        else {\n            console.error(`[${to}] No handler for response message ${type}`);\n        }\n        return false;\n    }\n    const handleRequest = requestHandlers[type];\n    if (handleRequest) {\n        return handleRequest(message, sender, sendResponse);\n    }\n    console.error(`[${to}] No handler for request message ${type}`);\n    return false;\n});\n//# sourceMappingURL=addListener.js.map","import { addListener } from 'utils';\nimport { requestHandlers, responseHandlers } from './handlers';\n\naddListener('background', requestHandlers, responseHandlers);\n","import type { RequestHandler, ResponseHandler } from 'utils';\n\nimport { login } from './login';\nimport { logout } from './logout';\n\nexport const requestHandlers: { [key: string]: RequestHandler } = {\n  login,\n  logout,\n};\nexport const responseHandlers: { [key: string]: ResponseHandler } = {};\n","import type { RequestHandler } from 'utils';\n\nexport const login: RequestHandler = ({ body }) => {\n  if (typeof body !== 'string' || !body) {\n    console.error('[background] login: invalid body', body);\n  } else {\n    const queryOptions = { active: true, lastFocusedWindow: true };\n    chrome.tabs.query(queryOptions).then(([tab]) => {\n      if (tab && tab.id) {\n        chrome.tabs.sendMessage(tab.id, {\n          from: 'background',\n          to: 'content',\n          type: 'alert',\n          body: `logged in as ${body}`,\n        });\n      }\n    });\n  }\n  return false;\n};\n","import type { RequestHandler } from 'utils';\n\nexport const logout: RequestHandler = () => {\n  const queryOptions = { active: true, lastFocusedWindow: true };\n  chrome.tabs.query(queryOptions).then(([tab]) => {\n    if (tab && tab.id) {\n      chrome.tabs.sendMessage(tab.id, {\n        from: 'background',\n        to: 'content',\n        type: 'alert',\n        body: 'logged out',\n      });\n    }\n  });\n  return false;\n};\n","/**\n * Tells whether the address is a recipient of the message.\n * @param param0 The message.\n * @param address The address to check.\n * @returns True if the address is a recipient of the message.\n */\nexport const isRecipient = ({ to }, address) => {\n    if (Array.isArray(to)) {\n        return to.length === 0 || to.includes(address);\n    }\n    return to === address;\n};\n//# sourceMappingURL=RuntimeMessage.js.map"],"names":["to","requestHandlers","responseHandlers","login","_ref","body","chrome","tabs","query","active","lastFocusedWindow","then","_ref2","tab","id","sendMessage","from","type","console","error","logout","runtime","onMessage","addListener","message","sender","sendResponse","address","Array","isArray","length","includes","isRecipient","isReply","handleResponse","handleRequest"],"mappings":"AAQ2B,IACzBA,EACAC,EACAC,EAFAF,ECNU,aDOVC,EELgE,CAChEE,MCJmC,SAAaC,GAAA,IAAAC,EAAAD,EAAVC,KAgBtC,MAfoB,iBAATA,GAAsBA,EAI/BC,OAAOC,KAAKC,MADS,CAAEC,QAAQ,EAAMC,mBAAmB,IACxBC,KAAK,SAAAC,OAAUC,EAAAD,EAAA,GACzCC,GAAOA,EAAIC,IACbR,OAAOC,KAAKQ,YAAYF,EAAIC,GAAI,CAC9BE,KAAM,aACNhB,GAAI,UACJiB,KAAM,QACNZ,KAAI,gBAAkBA,MAT5Ba,QAAQC,MAAM,mCAAoCd,IAc7C,GDXPe,OELoC,WAYpC,OAVAd,OAAOC,KAAKC,MADS,CAAEC,QAAQ,EAAMC,mBAAmB,IACxBC,KAAK,SAAUP,GAAA,IAAAS,EAAAT,EAAA,GACzCS,GAAOA,EAAIC,IACbR,OAAOC,KAAKQ,YAAYF,EAAIC,GAAI,CAC9BE,KAAM,aACNhB,GAAI,UACJiB,KAAM,QACNZ,KAAM,sBJCZH,EEFkE,GFIlEI,OAAOe,QAAQC,UAAUC,YACvB,SAACC,EAASC,EAAQC,GAEhB,IKiCqB,SAAAtB,EAEzBuB,GACW,IAAA3B,EAAAI,EAFTJ,GAGF,OAAI4B,MAAMC,QAAQ7B,GACK,IAAZA,EAAC8B,QAAgB9B,EAAG+B,SAASJ,GAE/B3B,IAAK2B,ELxCLK,CAAYR,EAASxB,GAAK,OAAA,EAE/B,IAAAiB,EAAiBO,EAATP,KAER,GADiBO,EACJS,QAAS,CACpB,IAAMC,EAAiBhC,EAAiBe,GAMxC,OALIiB,EACFA,EAJaV,EAIYC,GAEzBP,QAAQC,MAAUnB,IAAAA,EAAuCiB,qCAAAA,IAEpD,EAGT,IAAMkB,EAAgBlC,EAAgBgB,GACtC,OAAIkB,EACKA,EAAcX,EAA2BC,EAAQC,IAG1DR,QAAQC,MAAUnB,IAAAA,EAAsCiB,oCAAAA,IAEzD"}